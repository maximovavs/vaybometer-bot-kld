#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
post_klg.py  ‚Ä¢ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏.

–ó–∞–º–µ–Ω—è–µ–º:
  region_name = "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏"
  –ú–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞  (—Ç–æ–ø-5): –ë–∞–ª—Ç–∏–π—Å–∫, –Ø–Ω—Ç–∞—Ä–Ω—ã–π, –ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥—Å–∫, –ü–∏–æ–Ω–µ—Ä—Å–∫–∏–π, –°–≤–µ—Ç–ª–æ–≥–æ—Ä—Å–∫
  –ù–µ–º–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞: –ì—É—Ä—å–µ–≤—Å–∫, –°–≤–µ—Ç–ª—ã–π, –°–æ–≤–µ—Ç—Å–∫, –ß–µ—Ä–Ω—è—Ö–æ–≤—Å–∫, –ì—É—Å–µ–≤,
                    –ù–µ–º–∞–Ω, –ú–∞–º–æ–Ω–æ–≤–æ, –ü–æ–ª–µ—Å—Å–∫, –ë–∞–≥—Ä–∞—Ç–∏–æ–Ω–æ–≤—Å–∫, –õ–∞–¥—É—à–∫–∏–Ω,
                    –ü—Ä–∞–≤–¥–∏–Ω—Å–∫, –°–ª–∞–≤—Å–∫, –û–∑—ë—Ä—Å–∫, –ù–µ—Å—Ç–µ—Ä–æ–≤, –ö—Ä–∞—Å–Ω–æ–∑–Ω–∞–º–µ–Ω—Å–∫, –ì–≤–∞—Ä–¥–µ–π—Å–∫

  –ü–æ–∫–∞–∑—ã–≤–∞–µ–º:
   ‚Ä¢ ¬´–ú–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞ (–¥–Ω./–Ω–æ—á—å, –ø–æ–≥–æ–¥–∞)¬ª ‚Üí —Ç–æ–ø-5 —Å–∞–º—ã—Ö —Ç—ë–ø–ª—ã—Ö.
   ‚Ä¢ ¬´–¢—ë–ø–ª—ã–µ –≥–æ—Ä–æ–¥–∞¬ª ‚Üí 3 —Å–∞–º—ã—Ö —Ç—ë–ø–ª—ã—Ö —Å—Ä–µ–¥–∏ ¬´–Ω–µ–º–æ—Ä—Å–∫–∏—Ö¬ª.
   ‚Ä¢ ¬´–•–æ–ª–æ–¥–Ω—ã–µ –≥–æ—Ä–æ–¥–∞¬ª ‚Üí 3 —Å–∞–º—ã—Ö —Ö–æ–ª–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥–∏ ¬´–Ω–µ–º–æ—Ä—Å–∫–∏—Ö¬ª.
   ‚Ä¢ –û—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ ‚Äï —Å–º. –≤ post_common.py
"""

import os
import asyncio
import logging
from typing import Dict, Tuple

from telegram import Bot

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
from post_common import (
    main_common, CITIES  # CITIES –∑–¥–µ—Å—å ‚Äï —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ö–∏–ø—Ä–∞, –Ω–æ –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å
)

logging.basicConfig(level=logging.INFO, format="%(levelname)s: %(message)s")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ region_name –∏ —Å–ø–∏—Å–∫–æ–≤ –≥–æ—Ä–æ–¥–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
REGION_NAME = "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏"

# 1) –ú–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∂–¥–æ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ —Å–≤–æ–∏–º –¥–∞–Ω–Ω—ã–º)
SEA_CITIES: Dict[str, Tuple[float, float]] = {
    "–ë–∞–ª—Ç–∏–π—Å–∫":    (54.645, 19.912),
    "–Ø–Ω—Ç–∞—Ä–Ω—ã–π":    (54.922, 19.902),
    "–ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥—Å–∫":(54.964, 20.048),
    "–ü–∏–æ–Ω–µ—Ä—Å–∫–∏–π":  (54.901, 19.822),
    "–°–≤–µ—Ç–ª–æ–≥–æ—Ä—Å–∫": (54.962, 20.148),
}

# 2) –ù–µ–º–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞
NONSEA_CITIES: Dict[str, Tuple[float, float]] = {
    "–ì—É—Ä—å–µ–≤—Å–∫":      (54.660, 20.497),
    "–°–≤–µ—Ç–ª—ã–π":       (54.908, 19.759),
    "–°–æ–≤–µ—Ç—Å–∫":       (54.323, 21.101),
    "–ß–µ—Ä–Ω—è—Ö–æ–≤—Å–∫":    (54.630, 21.812),
    "–ì—É—Å–µ–≤":         (54.584, 21.855),
    "–ù–µ–º–∞–Ω":         (54.844, 22.683),
    "–ú–∞–º–æ–Ω–æ–≤–æ":      (54.625, 19.892),
    "–ü–æ–ª–µ—Å—Å–∫":       (54.891, 21.207),
    "–ë–∞–≥—Ä–∞—Ç–∏–æ–Ω–æ–≤—Å–∫": (54.368, 20.643),
    "–õ–∞–¥—É—à–∫–∏–Ω":      (54.791, 19.855),
    "–ü—Ä–∞–≤–¥–∏–Ω—Å–∫":     (55.029, 21.811),
    "–°–ª–∞–≤—Å–∫":        (54.756, 21.563),
    "–û–∑—ë—Ä—Å–∫":        (54.602, 21.546),
    "–ù–µ—Å—Ç–µ—Ä–æ–≤":      (54.361, 22.723),
    "–ö—Ä–∞—Å–Ω–æ–∑–Ω–∞–º–µ–Ω—Å–∫":(54.885, 21.094),
    "–ì–≤–∞—Ä–¥–µ–π—Å–∫":     (54.657, 21.082),
}

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ë–∞–ª—Ç–∏–π—Å–∫–æ–≥–æ –º–æ—Ä—è (–±–µ—Ä–µ–≥ –æ–∫–æ–ª–æ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–∞)
SEA_COORDS: Tuple[float, float] = (54.708, 20.511)  # –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ë–∞–ª—Ç–∏–π—Å–∫–æ–≥–æ –º–æ—Ä—è

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def main_klg():
    bot_token = os.getenv("TELEGRAM_TOKEN_KLG") or ""
    chat_id   = int(os.getenv("CHANNEL_ID_KLG", "0") or "0")
    # –ü–æ–¥–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é CHAT_ID –∏–∑ post_common –ø—Ä–∏ –≤—ã–∑–æ–≤–µ:
    os.environ["TELEGRAM_TOKEN"] = bot_token
    global CHAT_ID
    CHAT_ID = chat_id

    # 1) –°–Ω–∞—á–∞–ª–∞ –ø—É–±–ª–∏–∫—É–µ–º ¬´–ú–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞¬ª (—Ç–æ–ø-5 –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ)
    #    ‚Üí –î–ª—è —ç—Ç–æ–≥–æ –º—ã –≤—ã–∑—ã–≤–∞–µ–º main_common —Å SEA_CITIES –∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–ª–æ–≤–∞—Ä–µ–º
    await main_common(
        region_name=REGION_NAME + " (–º–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞)",  # –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ç–æ—á–Ω—è–µ—Ç—Å—è
        cities=SEA_CITIES,
        sea_label="–º–æ—Ä—è",  # —Ç.–∫. —ç—Ç–æ –ë–∞–ª—Ç–∏–π—Å–∫–æ–µ –º–æ—Ä–µ
        sea_coords=SEA_COORDS,
    )

    # 2) –î–∞–ª–µ–µ –ø—É–±–ª–∏–∫—É–µ–º ¬´–ù–µ–º–æ—Ä—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞¬ª ‚Äï —Å —Ç—Ä–µ–º—è —Å–∞–º—ã–º–∏ —Ç–µ–ø–ª—ã–º–∏ –∏ —Ç—Ä–µ–º—è —Ö–æ–ª–æ–¥–Ω—ã–º–∏:
    #    –í–∑—è—Ç—å –≤—Å–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¥–ª—è NONSEA_CITIES, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –¥–Ω–µ–≤–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ.
    #    –í—ã–≤–µ—Å—Ç–∏ —Ç–æ–ø-3 –∏ bottom-3, –ø–æ–¥–æ–±–Ω–æ —Ä–µ–π—Ç–∏–Ω–≥—É.
    #    –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–≤–æ–¥–∏–º —Ç–æ—Ç –∂–µ –±–ª–æ–∫ ¬´–∫–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ ‚Üí –®—É–º–∞–Ω ‚Üí –ê—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è¬ª –∏ —Ç. –¥.
    await asyncio.sleep(3)  # –¥–∞—ë–º —á—É—Ç—å –ø–∞—É–∑—ã, —á—Ç–æ–±—ã –Ω–µ ¬´—Å–ø–∞–º–∏—Ç—å¬ª telegram —Å—Ä–∞–∑—É –¥–≤—É–º—è –∫—Ä—É–ø–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏

    # –°–æ–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä:
    temps_nonsea: Dict[str, Tuple[float, float, int]] = {}
    from weather import fetch_tomorrow_temps, get_weather

    for city, (la, lo) in NONSEA_CITIES.items():
        dd, nn = fetch_tomorrow_temps(la, lo, tz=TZ.name)
        if dd is None:
            continue
        wc = get_weather(la, lo) or {}
        code_tmr = wc.get("daily", {}).get("weathercode", [])[1] if wc else 0
        temps_nonsea[city] = (dd, nn or dd, code_tmr)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ NONSEA_CITIES:
    if temps_nonsea:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–Ω–µ–≤–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ (—É–±—ã–≤.), –±–µ—Ä–µ–º top3:
        sorted_cities = sorted(temps_nonsea.items(), key=lambda kv: kv[1][0], reverse=True)
        top3 = sorted_cities[:3]
        bottom3 = sorted_cities[-3:]

        text_lines: List[str] = []
        text_lines.append(f"üéá <b>–¢—ë–ø–ª—ã–µ –≥–æ—Ä–æ–¥–∞ ({REGION_NAME}, —Ç–æ–ø-3)</b>")
        medals = ["üî•","üî•","üî•"]
        for i, (city, (dd, nn, code)) in enumerate(top3):
            text_lines.append(f"{medals[i]} {city}: {dd:.1f}/{nn:.1f} ¬∞C, {code_desc(code)}")

        text_lines.append("‚Äî‚Äî‚Äî")
        text_lines.append(f"‚ùÑÔ∏è <b>–•–æ–ª–æ–¥–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ ({REGION_NAME}, bottom-3)</b>")
        snowflakes = ["‚ùÑÔ∏è","‚ùÑÔ∏è","‚ùÑÔ∏è"]
        for i, (city, (dd, nn, code)) in enumerate(bottom3):
            text_lines.append(f"{snowflakes[i]} {city}: {dd:.1f}/{nn:.1f} ¬∞C, {code_desc(code)}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –±–ª–æ–∫:
        bot = Bot(token=bot_token)
        try:
            await bot.send_message(
                chat_id=chat_id,
                text="\n".join(text_lines),
                parse_mode=constants.ParseMode.HTML,
                disable_web_page_preview=True
            )
            logging.info("Non-sea cities block sent ‚úì")
        except tg_err.TelegramError as e:
            logging.error("Telegram error (non-sea): %s", e)

    # 3) –ó–∞—Ç–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥—ë–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –æ—Å—Ç–∞–ª—å–Ω–æ–π ¬´–æ–±—â–∏–π¬ª –±–ª–æ–∫:
    await asyncio.sleep(3)
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—â–∏–π –±–ª–æ–∫ (–ø–æ–≤—Ç–æ—Ä–Ω–æ) —Å ¬´–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–æ–º¬ª –∫–∞–∫ –æ–¥–Ω–∏–º –∏–∑ –≥–æ—Ä–æ–¥–æ–≤
    # (–¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –≤—ã–≤–µ—Å—Ç–∏ ¬´–ø–æ–≥–æ–¥—É –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ¬ª –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–æ—á–∫—É).
    # –ß—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å –∫–æ–¥, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Å–ª–æ–≤–∞—Ä—å:
    full_cities = {
        "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥": (54.710, 20.452),
        **NONSEA_CITIES
    }
    await main_common(
        region_name=REGION_NAME,
        cities=full_cities,
        sea_label="–º–æ—Ä—è",
        sea_coords=SEA_COORDS,
    )


if __name__ == "__main__":
    asyncio.run(main_klg())
