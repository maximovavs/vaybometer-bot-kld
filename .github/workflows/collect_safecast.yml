name: Collect SafeCast (Kaliningrad)

on:
  schedule:
    - cron: "0 */6 * * *"         # каждые 6 часов
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/collect_safecast.yml"
      - "safecast.py"

permissions:
  contents: write

concurrency:
  group: safecast-kld
  cancel-in-progress: true

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Prepare worktree (rebase on latest)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase --autostash
          mkdir -p data

      - name: Fetch SafeCast (Kaliningrad)
        run: |
          set -e
          python safecast.py \
            --lat 54.7104 \
            --lon 20.4522 \
            --dist 300 \
            --hours 48 \
            --out data/safecast_kaliningrad.json

      - name: Preview file (size, JSON, ts → ISO)
        run: |
          set -e
          FILE="data/safecast_kaliningrad.json"
          if [ ! -f "$FILE" ]; then
            echo "File not found: $FILE"; exit 1
          fi
          ls -lah "$FILE"
          python - <<'PY'
import json
from datetime import datetime, timezone
p="data/safecast_kaliningrad.json"
with open(p, "r", encoding="utf-8") as f:
    d=json.load(f)
print("---- Pretty JSON ----")
print(json.dumps(d, ensure_ascii=False, indent=2))
ts=d.get("ts")
if isinstance(ts,(int,float)):
    iso=datetime.fromtimestamp(int(ts), tz=timezone.utc).isoformat()
    print("ts_iso:", iso)
else:
    print("ts_iso: n/a")
print("keys:", list(d.keys()))
PY

      - name: Commit & Push if changed
        run: |
          set -e
          if [ -n "$(git status --porcelain -- data/safecast_kaliningrad.json)" ]; then
            git add data/safecast_kaliningrad.json
            git commit -m "safecast(Kaliningrad): update data/safecast_kaliningrad.json"
            git push
          else
            echo "No changes in data/safecast_kaliningrad.json"
          fi

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: safecast-kaliningrad
          path: data/safecast_kaliningrad.json