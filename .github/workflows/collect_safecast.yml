name: Collect SafeCast (Kaliningrad)

on:
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours, UTC
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: safecast-kld
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Prepare repo
        run: |
          set -euo pipefail
          git fetch origin main
          git checkout -B main origin/main
          git reset --hard origin/main
          mkdir -p data

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Fetch SafeCast (Kaliningrad)
        run: |
          set -euo pipefail
          python safecast.py \
            --lat 54.7104 \
            --lon 20.4522 \
            --dist 300 \
            --hours 48 \
            --out data/safecast_kaliningrad.json

      - name: Preview file
        run: |
          set -euo pipefail
          test -f data/safecast_kaliningrad.json
          ls -lah data/safecast_kaliningrad.json
          python - <<'PY'
import json, pathlib, datetime
p = pathlib.Path("data/safecast_kaliningrad.json")
d = json.loads(p.read_text("utf-8"))
print(json.dumps(d, ensure_ascii=False, indent=2))
ts = d.get("ts")
if isinstance(ts, (int, float)):
    print("ts_iso:", datetime.datetime.utcfromtimestamp(int(ts)).isoformat()+"Z")
PY

      - name: Pull/commit/push if changed
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # make sure we are up to date and handle local changes safely
          git fetch origin main
          if ! git diff --quiet; then
            git stash push -u -m "pre-pull stash"
          fi
          git pull --rebase origin main || git rebase --abort

          CHANGED=$(git status --porcelain -- data/safecast_kaliningrad.json || true)
          if [ -n "$CHANGED" ]; then
            git add data/safecast_kaliningrad.json
            git commit -m "safecast(Kaliningrad): update data/safecast_kaliningrad.json"
            git push origin HEAD:main
          else
            echo "No changes in data/safecast_kaliningrad.json"
          fi

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: safecast-kaliningrad
          path: data/safecast_kaliningrad.json