name: Monthly VayboMeter Calendar

on:
  schedule:
    - cron: '0 10 * * *'          # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 10:00 UTC
  workflow_dispatch:
    inputs:
      force_run:
        description: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –¥–∞—Ç—ã"
        default: "false"
        required: false

permissions:
  contents: write

jobs:
  monthly:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2. –†–µ—à–∞–µ–º, –Ω—É–∂–µ–Ω –ª–∏ —Ä–∞—Å—á—ë—Ç
    - name: üîç Decide run condition
      id: decide
      shell: bash
      run: |
        # –ü–æ-—É–º–æ–ª—á–∞–Ω–∏—é ¬´–Ω–µ—Ç¬ª
        run=no
        # –ó–∞–≤—Ç—Ä–∞ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ ‚Üí –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –°–õ–ï–î–£–Æ–©–ò–ô –º–µ—Å—è—Ü
        if [[ $(date -d 'tomorrow' +%d) == "01" ]]; then
          run=yes
          work_date=$(date -d "$(date +%Y-%m-01) +1 month" +%Y-%m-%d)
        fi
        # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ c force_run=true ‚Üí —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        if [[ "${{ github.event_name }}" == 'workflow_dispatch' && \
              "${{ github.event.inputs.force_run }}" == 'true' ]]; then
          run=yes
          work_date=$(date +%Y-%m-%d)   # —Å–µ–≥–æ–¥–Ω—è
        fi
        echo "RUN_CALENDAR=$run"  >> $GITHUB_ENV
        echo "WORK_DATE=${work_date:-}" >> $GITHUB_ENV

    # 3. Python
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # 4. Deps
    - name: üì¶ Install dependencies
      if: env.RUN_CALENDAR == 'yes'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    - name: üåô Generate lunar_calendar.json
      if: env.RUN_CALENDAR == 'yes'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        WORK_DATE:      ${{ env.WORK_DATE }}
      run: |
        # –ï—Å–ª–∏ WORK_DATE –∑–∞–¥–∞–Ω–∞ ‚Üí ¬´–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º¬ª pendulum.today()
        python <<'PY'
        import os, pendulum, runpy, sys
        wd = os.getenv("WORK_DATE")
        if wd:
            pendulum.today = lambda tz=None: pendulum.parse(wd)
        sys.argv = ["gen_lunar_calendar.py"]
        runpy.run_path("gen_lunar_calendar.py", run_name="__main__")
        PY

    # 6. Commit & push
    - name: ‚úèÔ∏è Commit & push
      if: env.RUN_CALENDAR == 'yes'
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add lunar_calendar.json
        if git diff --cached --quiet; then
          echo "‚úÖ lunar_calendar.json –∞–∫—Ç—É–∞–ª–µ–Ω"
        else
          git commit -m "chore: update lunar_calendar.json"
          git pull --rebase --autostash || true
          git push
        fi

    # 7. Telegram summary
    - name: üì® Send monthly summary
      if: env.RUN_CALENDAR == 'yes'
      env:
        TELEGRAM_TOKEN_KLD: ${{ secrets.TELEGRAM_TOKEN }}
        CHANNEL_ID_KLD:     ${{ secrets.CHANNEL_ID }}
      run: python send_monthly_calendar.py
