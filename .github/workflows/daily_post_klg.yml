name: Daily VayboMeter (KLD)

on:
  schedule:
    # Утренний пост: 05:00 UTC = 08:00 МСК
    - cron: '0 5 * * *'
    # Курсы валют в полдень МСК: 09:00 UTC = 12:00 МСК
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      run_morning:
        description: "Запустить утренний пост"
        default: "true"
        required: false
      run_noon_fx:
        description: "Запустить пост только с курсами"
        default: "false"
        required: false
      work_date:
        description: "Переопределить дату (YYYY-MM-DD)"
        required: false

permissions:
  contents: read

concurrency:
  group: daily-post-klg
  cancel-in-progress: false

jobs:
  morning:
    name: Morning post (08:00 MSK)
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '0 5 * * *') ||
      (github.event_name == 'workflow_dispatch' && (inputs.run_morning == 'true' || inputs.run_morning == ''))
    env:
      TELEGRAM_TOKEN_KLG: ${{ secrets.TELEGRAM_TOKEN_KLG }}
      CHANNEL_ID_KLG:     ${{ secrets.CHANNEL_ID_KLG }}
      # короткие советы из LLM для ежедневки ВКЛ
      GEN_SKIP_SHORT: "1"
      DISABLE_LLM_DAILY: "0"
      # для корректного локального времени в Python
      TZ: Europe/Kaliningrad
      # можно переопределить дату при ручном запуске
      WORK_DATE: ${{ github.event.inputs.work_date }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r data/requirements.txt

      - name: Post morning (for tomorrow)
        shell: bash
        run: |
          # Если WORK_DATE задана → «переопределяем» pendulum.today()
          python <<'PY'
          import os, runpy, sys, pendulum
          wd = os.getenv("WORK_DATE")
          if wd:
              pendulum.today = lambda tz=None: pendulum.parse(wd)
          # Ежедневный пост на завтра
          sys.argv = ["data/post_kld.py", "--for-tomorrow"]
          runpy.run_path("data/post_kld.py", run_name="__main__")
          PY

  noon_fx:
    name: Noon FX only (12:00 MSK)
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '0 9 * * *') ||
      (github.event_name == 'workflow_dispatch' && inputs.run_noon_fx == 'true')
    env:
      TELEGRAM_TOKEN_KLG: ${{ secrets.TELEGRAM_TOKEN_KLG }}
      CHANNEL_ID_KLG:     ${{ secrets.CHANNEL_ID_KLG }}
      # ежедневный мини-LLM нам тут не нужен, но пусть будет одинаково
      GEN_SKIP_SHORT: "1"
      DISABLE_LLM_DAILY: "0"
      TZ: Europe/Kaliningrad
      WORK_DATE: ${{ github.event.inputs.work_date }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r data/requirements.txt

      - name: Post FX only (12:00 MSK)
        shell: bash
        run: |
          python <<'PY'
          import os, runpy, sys, pendulum
          wd = os.getenv("WORK_DATE")
          if wd:
              pendulum.today = lambda tz=None: pendulum.parse(wd)
          # Пост только с курсами валют
          sys.argv = ["data/post_kld.py", "--fx-only"]
          runpy.run_path("data/post_kld.py", run_name="__main__")
          PY
