name: Collect Schumann

on:
  schedule:
    - cron: "*/30 * * * *"   # –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: collect-schumann
  cancel-in-progress: true  # –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, —á–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ —Ä–∞–Ω–∫–∏

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests matplotlib

      - name: Run collector (writes schumann_hourly.json v2)
        env:
          # ‚Äî HeartMath (GCI)
          SCHU_GCI_ENABLE: "1"
          SCHU_GCI_STATIONS: "GCI001,GCI003,GCI006,GCI004,GCI005"
          SCHU_GCI_URL: "https://www.heartmath.org/gci/gcms/live-data/gcms-magnetometer/"
          SCHU_GCI_IFRAME: "https://www.heartmath.org/gci/gcms/live-data/gcms-magnetometer/power_levels.html"
          SCHU_MAP_GCI_POWER_TO_AMP: "1"

          # ‚Äî —Ñ–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –∏ –ª–æ–∫–∞–ª—å–Ω—ã–π HTML (–µ—Å–ª–∏ –µ—Å—Ç—å)
          SCHU_FILE: schumann_hourly.json
          SCHU_MAX_LEN: "5000"
          SCHU_HEARTMATH_HTML: data/gcms_magnetometer_heartmath.html

          # ‚Äî –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          SCHU_AMP_SCALE: "1"
          SCHU_TREND_WINDOW: "24"
          SCHU_TREND_DELTA: "0.1"
          SCHU_ALLOW_CACHE_ON_FAIL: "1"

          # ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–≤–æ–π JSON-—ç–Ω–¥–ø–æ–∏–Ω—Ç
          SCHU_CUSTOM_URL: ""

          # ‚Äî 7-—è –≥–∞—Ä–º–æ–Ω–∏–∫–∞ (–∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ)
          H7_URL: ""
          H7_TARGET_HZ: "54.81"
          H7_WINDOW_H: "48"
          H7_Z: "2.5"
          H7_MIN_ABS: "0.2"

          # ‚Äî user agent –¥–ª—è HeartMath
          SCHU_USER_AGENT: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36"

          # ‚Äî circuit breaker –¥–ª—è –ª–∞–π–≤–∞
          SCHU_BREAKER_THRESHOLD: "3"
          SCHU_BREAKER_COOLDOWN:  "1800"
        run: |
          python schumann.py --collect || echo "WARN: collector failed"

      - name: Fix history (normalize + dedupe)
        run: |
          python schumann.py --fix-history || true

      - name: Make trend charts (48h & 7d)
        run: |
          python - <<'PY'
          import json, datetime as dt, matplotlib.pyplot as plt
          with open("schumann_hourly.json","r",encoding="utf-8") as f:
              data=json.load(f)
          points=[(dt.datetime.utcfromtimestamp(r["ts"]), r.get("amp")) for r in data]
          points=[(t,a) for t,a in points if isinstance(a,(int,float))]
          def save_chart(hours,out):
              if not points: return
              t_cut=points[-1][0]-dt.timedelta(hours=hours)
              xs=[t for t,a in points if t>=t_cut]
              ys=[a for t,a in points if t>=t_cut]
              if len(xs)<2: return
              plt.figure(figsize=(10,4),dpi=160)
              plt.plot(xs,ys,marker="o",linewidth=1.5,markersize=2)
              plt.grid(True,alpha=0.3)
              plt.title(f"Schumann amplitude (last {hours}h, UTC) ‚Äî n={len(xs)}; last={ys[-1]:.2f}")
              plt.xlabel("Time (UTC)")
              plt.ylabel("Amplitude")
              plt.tight_layout()
              plt.savefig(out)
              plt.close()
          save_chart(48,"schumann_amp_48h.png")
          save_chart(24*7,"schumann_amp_7d.png")
          print("Charts written: schumann_amp_48h.png, schumann_amp_7d.png")
          PY

      - name: Commit & push if changed (JSON + charts)
        id: commit
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add schumann_hourly.json schumann_amp_48h.png schumann_amp_7d.png || true
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            git commit -m "schumann: update (v2.1; fix-history; charts) $(date -u +'%Y-%m-%dT%H:%MZ')"
            git push
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifacts (JSON + charts)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: schumann-data
          path: |
            schumann_hourly.json
            schumann_amp_48h.png
            schumann_amp_7d.png
          retention-days: 7
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      # ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∞–≤—Ç–æ–ø–æ—Å—Ç –≤ Telegram (–≤–∫–ª—é—á–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π TG_ENABLED=1)
      - name: Post to Telegram (optional)
        if: steps.commit.outputs.changed == 'true' && vars.TG_ENABLED == '1'
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID:   ${{ secrets.CHANNEL_ID }}
        run: |
          CAPTION="Schumann update ‚Ä¢ $(date +'%Y-%m-%d %H:%M')"
          curl -s -F chat_id="$CHAT_ID" -F caption="$CAPTION (48h)" -F parse_mode="HTML" \
               -F photo="@schumann_amp_48h.png" \
               "https://api.telegram.org/bot$BOT_TOKEN/sendPhoto"
          curl -s -F chat_id="$CHAT_ID" -F caption="$CAPTION (7d)" -F parse_mode="HTML" \
               -F photo="@schumann_amp_7d.png" \
               "https://api.telegram.org/bot$BOT_TOKEN/sendPhoto"

          # –¢–µ–∫—Å—Ç: —Å—Ç–∞—Ç—É—Å (üü¢/üü°/üî¥), —Ç—Ä–µ–Ω–¥ (¬´—Ä–∞—Å—Ç—ë—Ç/—Å–Ω–∏–∂–∞–µ—Ç—Å—è/—Å—Ç–∞–±–∏–ª—å–Ω–æ¬ª), H7, –º—è–≥–∫–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
          MSG="$(python - <<'PY'
import json
def cls(f):
    if not isinstance(f,(int,float)): return "üü° –∫–æ–ª–µ–±–∞–Ω–∏—è","yellow"
    if 7.4 <= f <= 8.4:
        if 7.7 <= f <= 8.1: return "üü¢ –≤ –Ω–æ—Ä–º–µ","green"
        return "üü° –∫–æ–ª–µ–±–∞–Ω–∏—è","yellow"
    return "üî¥ —Å–∏–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ","red"
try:
    d=json.load(open('schumann_hourly.json',encoding='utf-8'))[-1]
except Exception:
    d={}
status,code=cls(d.get('freq'))
trend={"‚Üë":"—Ä–∞—Å—Ç—ë—Ç","‚Üì":"—Å–Ω–∏–∂–∞–µ—Ç—Å—è","‚Üí":"—Å—Ç–∞–±–∏–ª—å–Ω–æ"}.get(d.get("trend","‚Üí"),"—Å—Ç–∞–±–∏–ª—å–Ω–æ")
h7=d.get("h7_amp"); h7s="¬∑ H7: ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
if isinstance(h7,(int,float)):
    h7s=f"¬∑ H7: {h7:.1f} (‚ö° –≤—Å–ø–ª–µ—Å–∫)" if d.get("h7_spike") else f"¬∑ H7: {h7:.1f} ‚Äî —Å–ø–æ–∫–æ–π–Ω–æ"
amp=d.get("amp"); amp=(f"{amp:.2f}" if isinstance(amp,(int,float)) else "‚Äî")
freq=d.get("freq"); freq=(f"{freq:.2f}" if isinstance(freq,(int,float)) else "‚Äî")
interp=("–í–æ–ª–Ω—ã –®—É–º–∞–Ω–∞ –±–ª–∏–∑–∫–∏ –∫ –Ω–æ—Ä–º–µ ‚Äî –æ—Ä–≥–∞–Ω–∏–∑–º —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –∫–∞–∫ –Ω–∞ –æ–±—ã—á–Ω—ã–π –¥–µ–Ω—å."
        if code=="green" else
        "–ó–∞–º–µ—Ç–Ω—ã –∫–æ–ª–µ–±–∞–Ω–∏—è ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –ª—ë–≥–∫–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –ø–æ–≥–æ–¥–µ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é."
        if code=="yellow" else
        "–°–∏–ª—å–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è ‚Äî –ø—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é –∏ —Å–Ω–∏–∂–∞–π—Ç–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏.")
print(f"{status} ‚Ä¢ —Ç—Ä–µ–Ω–¥: {trend}\n"
      f"f={freq} –ì—Ü, amp={amp}\n"
      f"{h7s}\n"
      f"{interp}")
PY
)"
          curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
               -d chat_id="$CHAT_ID" \
               -d parse_mode="HTML" \
               --data-urlencode "text=${MSG}"