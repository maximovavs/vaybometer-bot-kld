name: Collect Schumann

on:
  schedule:
    - cron: "*/30 * * * *"   # каждые 30 минут
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: collect-schumann
  cancel-in-progress: false

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run collector (writes schumann_hourly.json v2)
        env:
          # — HeartMath (GCI)
          SCHU_GCI_ENABLE: "1"
          SCHU_GCI_STATIONS: "GCI001,GCI003,GCI006,GCI004,GCI005"
          SCHU_GCI_URL: "https://www.heartmath.org/gci/gcms/live-data/gcms-magnetometer/"
          SCHU_GCI_IFRAME: "https://www.heartmath.org/gci/gcms/live-data/gcms-magnetometer/power_levels.html"
          SCHU_MAP_GCI_POWER_TO_AMP: "1"

          # — файл истории и локальный HTML (если есть)
          SCHU_FILE: schumann_hourly.json
          SCHU_MAX_LEN: "5000"
          SCHU_HEARTMATH_HTML: data/gcms_magnetometer_heartmath.html

          # — базовые настройки
          SCHU_AMP_SCALE: "1"
          SCHU_TREND_WINDOW: "24"
          SCHU_TREND_DELTA: "0.1"
          SCHU_ALLOW_CACHE_ON_FAIL: "1"

          # — опциональный свой JSON-эндпоинт
          SCHU_CUSTOM_URL: ""

          # — 7-я гармоника (зарезервировано)
          H7_URL: ""
          H7_TARGET_HZ: "54.81"
          H7_WINDOW_H: "48"
          H7_Z: "2.5"
          H7_MIN_ABS: "0.2"

          # — отладка / User-Agent
          SCHU_DEBUG: "0"
          SCHU_USER_AGENT: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36"
        run: |
          python schumann.py --collect
          echo "Last record JSON:"
          tail -n 1 schumann_hourly.json || true
          echo "Last 5 records:"
          tail -n 5 schumann_hourly.json || true
          echo "File size:"
          wc -c schumann_hourly.json || true

      - name: Fix & dedupe history
        run: |
          python schumann.py --fix-history
          python schumann.py --dedupe

      # ── Графики амплитуды (PNG) ───────────────────────────────────────
      - name: Install plotting deps
        run: |
          python -m pip install matplotlib

      - name: Make trend charts (48h & 7d)
        run: |
          python - <<'PY'
          import json, math, datetime as dt
          import matplotlib.pyplot as plt

          PATH = "schumann_hourly.json"

          # читать историю
          with open(PATH, "r", encoding="utf-8") as f:
            data = json.load(f)

          # преобразование
          points = []
          for r in data:
            ts = r.get("ts")
            amp = r.get("amp")
            if isinstance(ts, int) and isinstance(amp, (int, float)) and not math.isnan(amp):
              points.append((dt.datetime.utcfromtimestamp(ts), float(amp)))
          points.sort(key=lambda x: x[0])

          def save_chart(hours, out):
            if not points:
              return
            t_cut = points[-1][0] - dt.timedelta(hours=hours)
            xs = [t for t,a in points if t >= t_cut]
            ys = [a for t,a in points if t >= t_cut]
            if len(xs) < 2:
              return
            plt.figure(figsize=(10,4), dpi=160)
            plt.plot(xs, ys, marker='o', linewidth=1.5, markersize=2)  # цвет по умолчанию
            plt.grid(True, alpha=0.3)
            plt.title(f"Schumann amplitude (last {hours}h, UTC) — n={len(xs)}; last={ys[-1]:.2f}")
            plt.xlabel("Time (UTC)")
            plt.ylabel("Amplitude")
            plt.tight_layout()
            plt.savefig(out)
            plt.close()

          save_chart(48, "schumann_amp_48h.png")
          save_chart(24*7, "schumann_amp_7d.png")
          print("Charts written: schumann_amp_48h.png, schumann_amp_7d.png")
          PY

      - name: Commit & push if changed
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet -- schumann_hourly.json; then
            git add schumann_hourly.json
            git commit -m "schumann: update (v2, live GCI power, fixed history)"
            git push
          else
            echo "No changes in schumann_hourly.json"
          fi

      - name: Upload artifacts (JSON + charts)
        uses: actions/upload-artifact@v4
        with:
          name: schumann-data
          path: |
            schumann_hourly.json
            schumann_amp_48h.png
            schumann_amp_7d.png
          retention-days: 7